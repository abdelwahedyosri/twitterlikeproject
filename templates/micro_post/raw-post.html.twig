{% extends 'base.html.twig' %}

{% block body %}
{% set isLiked=post.getLikedBy.contains(app.user) %}

<div class="media text-muted pt-3">
    <p class="media-body pb-3 mb-0 small lh-125 border-bottom border-gray">
        <span class="d-block">
            <a href="{{path('micropost_user',{'fullname':post.user.fullname})}}">
                <strong class="text-gray-dark">@ {{post.user.fullname}} </strong>
            </a>
            <small>{{post.time | date("m/d/Y")}}/{{post.time | date('H:i')}}</small></span>
       {{post.text}}  
    </p>
</div>
<div class="pt-2">
    
        
    <button style="display:{% if not isLiked %}block{% else %}none{% endif %}" class="btn btn-outline-secondary btn-sm " id="like">Like
    <span class="badge badge-light" id="likes-like">{{post.getLikedBy.count}}</span>
</button>


<button style="display:{% if not isLiked %}block{% else %}none{% endif %}" class="btn btn-outline-secondary btn-sm " id="unlike">UnLike
    <span class="badge badge-light" id="likes-unlike">{{post.getLikedBy.count}}</span>
</button>

</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
    
var likebutton= document.getElementById('like');
var Unlikebutton= document.getElementById('unlike');

addonclick(likebutton,
    Unlikebutton,
   document.getElementById('likes-unlike'),
    '{{path('likes_like',{'id':post.id} )}}');

addonclick(Unlikebutton,
    likebutton,
    document.getElementById('likes-like'),
    '{{path('likes_unlike',{'id':post.id} )}}');



function switchbuttons(button,oppositebutton){
    button.disabled=false;
    button.style.display='none';
    oppositebutton.style.display='block';
}
function addonclick(button,oppositebutton,likecount,path){

    button.addEventListener('click',function(event){
        button.disabled=true;
         fetch(path,{'credentials':'include'}).then(function(response){

            response.json().then(function(json){
                Likecount.innerText=json.count;
               switchbuttons(button,oppositebutton);

          
    }).catch(function(){

        switchbuttons(button,oppositebutton);
    });
    event.preventDefault();
    });     

    });     
    
}

</script> 

<script>
        var likeButton = document.getElementById('like');
        var unlikeButton = document.getElementById('unlike');

        addOnClick(
            likeButton,
            unlikeButton,
            document.getElementById('likes-unlike'),
            '{{ path('likes_like', {'id': post.id}) }}'
        );

        addOnClick(
            unlikeButton,
            likeButton,
            document.getElementById('likes-like'),
            '{{ path('likes_unlike', {'id': post.id}) }}'
        );

        function switchButtons(button, oppositeButton) {
            button.disabled = false;
            button.style.display = 'none';
            oppositeButton.style.display = 'block';
        }

        function addOnClick(button, oppositeButton, likeCount, path) {
            button.addEventListener('click', function (event) {
                {% if not app.user %}
                    return window.location.replace('{{ path('user_register') }}');
                {% endif %}

                button.disabled = true;

                fetch(path, {'credentials': 'include'}).then(function (response) {
                    response.json().then(function (json) {
                        likeCount.innerText = json.count;
                        switchButtons(button, oppositeButton);
                    })
                }).catch(function () {
                    switchButtons(button, oppositeButton);
                });

                event.preventDefault();
            });
        }
    </script>  
{% endblock %}
